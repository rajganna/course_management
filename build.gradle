plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

apply plugin: 'application'

group = 'com.minden.ai'
version = '0.0.1'

java {
	sourceCompatibility = '17'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
		resources {
			srcDirs = ['src/main/resources']
		}
	}
	test {
		java.srcDir file('src/test/java/')
		resources.srcDir 'src/test/resources'
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

processTestResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.postgresql:postgresql:42.2.23'
	implementation 'org.languagetool:language-en:6.3'
	implementation("com.github.ben-manes.caffeine:caffeine:3.0.4")
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-params'
	testImplementation 'org.mockito:mockito-core:3.4.0'
	testImplementation 'org.mockito:mockito-inline:3.4.0'
}

test {
	useJUnitPlatform()
	afterTest { desc, result ->
		println "Executed test: ${desc.name}"
	}
	afterSuite { suite, result ->
		if (!suite.parent) { // will match the outermost suite
			println "Total tests executed: ${result.testCount}"
		}
	}
}
